FORMAT: 1A
HOST: https://api.dmitrimcguckin.com

# Project Manager API

A content manager for my personal portfolio and general GCP Firestore resource manager.

##Version [/]

This endpoint is for fetching the API's active version.

### Get Active API Version [GET]

+ Response 200 (application/json)

        {
            "version": (string),
            "website": "https://github.com/dmitri-mcguckin/portfolio",
            "license": "GPLv3",
            "author": "Dmitri McGuckin",
        }

## Projects [/projects]

This endpoint is for managing instances of a project resource.

### Get All Projects [GET /projects]

+ Response 200 (applicationAp/json)

        [
            {
                "title": (string),
                "subtitle": (string),
                "description": (string),
                "images": [
                    (string),
                ],
            }
        ]

+ Response 404 (application/json)
    + Headers

            Accept: "no projects found"

## Project [/project]

This endpoint is for managing instances of a project resource.

### Get Project by UID [GET /project/{uid}]

+ Parameters
    + uid (string, required) - The unique ID of the project.


+ Response 200 (application/json)

        {
            "title": (string),
            "subtitle": (string),
            "description": (string),
            "images": [
                (string),
            ],
        }

+ Response 404 (application/json)
    + Headers

            Accept: "project not found"

+ Response 406 (application/json)
    + Headers

            Accept: "missing or invalid parameters"

    + Body


            {
                "errors": [
                    (string)
                ]
            }

### Create a  Project [POST]

+ Request (application/json)

    + Body

            {
                "title": (string, required),
                "subtitle": (string),
                "description": (string, required),
                "images": [
                    (string)
                ]
            }
            
+ Response 201 (application/json)

        {
            "message": "project created",
            "project": {
                "uid": (string),
                "title": (string),
                "subtitle": (string),
                "description": (string),
                "images": [
                    (string)
                ]
            }
        }

+ Response 406 (application/json)
    + Headers

            Accept: "missing or invalid parameters"

    + Body


            {
                "errors": [
                    (string)
                ]
            }

+ Response 500 (application/json)
    + Headers

            Accept: "server failed to create resource"

    + Body


            {
                "error": (string),
            }

### Update a Project [PATCH /project/{uid}]

+ Parameters
    + uid (string, required) - The unique ID of the project.

+ Request (application/json)

    + Body

            {
                "title": (string),
                "subtitle": (string),
                "description": (string),
                "images": (string),
            }

+ Response 205 (application/json)

        {
            "message": "project updated",
            "project": {
                "uid": (string),
                "title": (string),
                "subtitle": (string),
                "description": (string),
                "images": [
                    (string)
                ]
            }
        }

+ Response 404 (application/json)
    + Headers

            Accept: "project not found"

    + Body

            {
                "errors": [
                    (string)
                ]
            }

+ Response 406 (application/json)

    + Headers

            Accept: "missing or invalid update parameters"
    
    + Body

            {
                "errors": [
                    (string)
                ]
            }

### Delete a Project [DELETE /project/{uid}]

+ Parameters
    + uid (string, required) - The unique ID of the project.

+ Response 202 (application/json)

        {
            "message": "project deleted"
        }

+ Response 404 (application/json)
    + Headers

            Accept: "project not found"

+ Response 406 (application/json)

    + Headers

            Accept: "no project uid provided"
    
    + Body

            {
                "error": (string),
            }

## Image [/image]

This endpoint is for managing instances of an image.

### Get Image by Name [GET /image/{name}]

+ Parameters
    + name (string, required) - The unique filename of the image.

+ Response 200 (image/*)

        (bytes)

+ Response 404 (application/json)
    + Headers

            Accept: "image not found"

+ Response 406 (application/json)

    + Headers

            Accept: "no file name specified"
    
    + Body

            {
                "errors": [
                    (string),
                ]
            }

### Create an Image [POST /image/{name}]

+ Parameters
    + name (string, required) - The unique filename of the new image.

+ Request (multipart/form-data)

    + Body

            (bytes, required)

+ Response 201 (application/json)

        {
            "images": [
                (string),
            ]
        }

+ Response 406 (application/json)

    + Headers

            Accept: "no files attached to request"
    
    + Body

            {
                "errors": [
                    (string),
                ]
            }

+ Response 500 (application/json)

    + Headers
    
            Accept: "the server failed to accept the image"

    + Body

            {
                "error": (string),
            }

+ Request (multipart/form-data)

    + Body

            (bytes, required)

+ Response 500 (application/json)

    + Headers
    
            Accept: "the server failed to accept the image metadata"

    + Body

            {
                "error": (string),
            }

+ Request (multipart/form-data)

    + Body

            (bytes, required)

+ Response 500 (application/json)

    + Headers
    
            Accept: "the server failed to upload the image"

    + Body

            {
                "error": (string),
            }

### Delete an Image by Name [DELETE /image/{name}]

+ Parameters
    + name (string, required) - The unique filename of the image.

+ Response 205 (application/json)

        {
            "message": "image deleted",
        }

+ Response 404 (application/json)
    + Headers

            Accept: "image not found"

+ Response 406 (application/json)

    + Headers

            Accept: "no image name specified"
    
    + Body

            {
                "errors": [
                    (string),
                ]
            }